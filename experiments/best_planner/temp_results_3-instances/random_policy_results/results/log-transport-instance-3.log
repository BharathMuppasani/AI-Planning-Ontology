INFO     planner time limit: 1800s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/bharath/Desktop/GitHub/downward/builds/release/bin/translate/translate.py /home/bharath/Desktop/ISWC_test/best_planner/data/transport/domain.pddl /home/bharath/Desktop/ISWC_test/best_planner/data/transport/instance-3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 26 rules.
Computing model... [0.010s CPU, 0.017s wall-clock]
564 relevant atoms
610 auxiliary atoms
1174 final queue length
1933 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.040s CPU, 0.041s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.014s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
7 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.007s wall-clock]
Reordering and filtering variables...
7 of 7 variables necessary.
0 of 7 mutex groups necessary.
424 of 424 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.002s wall-clock]
Translator variables: 7
Translator derived variables: 0
Translator facts: 56
Translator goal facts: 3
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 424
Translator axioms: 0
Translator task size: 2490
Translator peak memory: 36068 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.080s CPU, 0.078s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: None
INFO     search command line string: /home/bharath/Desktop/GitHub/downward/builds/release/bin/downward --search 'let(hlm,landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false),let(hff,ff(transform=adapt_costs(one)),lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)))' --internal-plan-file /home/bharath/Desktop/ISWC_test/best_planner/random_policy_results/results/plan-transport-instance-3.txt < output.sas
[t=0.00799773s, 10980 KB] reading input...
[t=0.0120163s, 11104 KB] done reading input!
[t=0.019981s, 11368 KB] Initializing landmark sum heuristic...
[t=0.019981s, 11368 KB] Generating landmark graph...
[t=0.019981s, 11368 KB] Building a landmark graph with reasonable orders.
[t=0.019981s, 11368 KB] Initializing Exploration...
[t=0.019981s, 11368 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0239799s, 11368 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0239799s, 11368 KB] Landmarks generation time: 0.00399891s
[t=0.0239799s, 11368 KB] Discovered 14 landmarks, of which 8 are disjunctive and 0 are conjunctive.
[t=0.0239799s, 11368 KB] 25 edges
[t=0.0239799s, 11368 KB] approx. reasonable orders
[t=0.0239799s, 11368 KB] approx. obedient reasonable orders
[t=0.0239799s, 11368 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0239799s, 11368 KB] Landmarks generation time: 0.00399891s
[t=0.0239799s, 11368 KB] Discovered 14 landmarks, of which 8 are disjunctive and 0 are conjunctive.
[t=0.0239799s, 11368 KB] 25 edges
[t=0.0239799s, 11368 KB] Landmark graph generation time: 0.00399891s
[t=0.0239799s, 11368 KB] Landmark graph contains 14 landmarks, of which 8 are disjunctive and 0 are conjunctive.
[t=0.0239799s, 11368 KB] Landmark graph contains 25 orderings.
[t=0.0239799s, 11368 KB] Simplifying 808 unary operators... done! [808 unary operators]
[t=0.0239799s, 11368 KB] time to simplify: 0s
[t=0.0239799s, 11368 KB] Initializing additive heuristic...
[t=0.0239799s, 11368 KB] Initializing FF heuristic...
[t=0.0239799s, 11368 KB] Building successor generator...done!
[t=0.0239799s, 11368 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0239799s, 11368 KB] time for successor generation creation: 0s
[t=0.0239799s, 11368 KB] Variables: 7
[t=0.0239799s, 11368 KB] FactPairs: 56
[t=0.0239799s, 11368 KB] Bytes per state: 4
[t=0.0279812s, 11368 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0279812s, 11500 KB] 3 initial landmarks, 3 goal landmarks
[t=0.0279812s, 11500 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 11
[t=0.0279812s, 11500 KB] New best heuristic value for ff(transform=adapt_costs(one)): 12
[t=0.0279812s, 11500 KB] g=0, 1 evaluated, 0 expanded
[t=0.0279812s, 11500 KB] Initial heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 11
[t=0.0279812s, 11500 KB] Initial heuristic value for ff(transform=adapt_costs(one)): 12
[t=0.0279812s, 11500 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 10
[t=0.0279812s, 11500 KB] New best heuristic value for ff(transform=adapt_costs(one)): 11
[t=0.0279812s, 11500 KB] g=1, 2 evaluated, 1 expanded
[t=0.0279812s, 11500 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 9
[t=0.0279812s, 11500 KB] New best heuristic value for ff(transform=adapt_costs(one)): 10
[t=0.0279812s, 11500 KB] g=3, 6 evaluated, 5 expanded
[t=0.0279812s, 11500 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 8
[t=0.0279812s, 11500 KB] g=4, 7 evaluated, 6 expanded
[t=0.0279812s, 11500 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 7
[t=0.0279812s, 11500 KB] g=5, 9 evaluated, 8 expanded
[t=0.0279812s, 11500 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 6
[t=0.0279812s, 11500 KB] New best heuristic value for ff(transform=adapt_costs(one)): 9
[t=0.0279812s, 11500 KB] g=6, 10 evaluated, 9 expanded
[t=0.0279812s, 11500 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 5
[t=0.0279812s, 11500 KB] New best heuristic value for ff(transform=adapt_costs(one)): 8
[t=0.0279812s, 11500 KB] g=7, 12 evaluated, 11 expanded
[t=0.0279812s, 11500 KB] New best heuristic value for ff(transform=adapt_costs(one)): 7
[t=0.0279812s, 11500 KB] g=8, 13 evaluated, 12 expanded
[t=0.0279812s, 11500 KB] New best heuristic value for ff(transform=adapt_costs(one)): 6
[t=0.0279812s, 11500 KB] g=9, 14 evaluated, 13 expanded
[t=0.0279812s, 11500 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 4
[t=0.0279812s, 11500 KB] New best heuristic value for ff(transform=adapt_costs(one)): 5
[t=0.0279812s, 11500 KB] g=10, 15 evaluated, 14 expanded
[t=0.0279812s, 11500 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 3
[t=0.0279812s, 11500 KB] New best heuristic value for ff(transform=adapt_costs(one)): 4
[t=0.0279812s, 11500 KB] g=11, 18 evaluated, 17 expanded
[t=0.0279812s, 11500 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 2
[t=0.0279812s, 11500 KB] g=12, 19 evaluated, 18 expanded
[t=0.0279812s, 11500 KB] New best heuristic value for landmark_sum(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false): 1
[t=0.0279812s, 11500 KB] New best heuristic value for ff(transform=adapt_costs(one)): 3
[t=0.0279812s, 11500 KB] g=13, 22 evaluated, 21 expanded
[t=0.0279812s, 11500 KB] New best heuristic value for ff(transform=adapt_costs(one)): 2
[t=0.0279812s, 11500 KB] g=14, 23 evaluated, 22 expanded
[t=0.0279812s, 11500 KB] New best heuristic value for ff(transform=adapt_costs(one)): 1
[t=0.0279812s, 11500 KB] g=15, 24 evaluated, 23 expanded
[t=0.0279812s, 11500 KB] Solution found!
[t=0.0279812s, 11500 KB] Actual search time: 0s
drive truck-2 city-2-loc-3 city-2-loc-2 (39)
drive truck-2 city-2-loc-2 city-1-loc-1 (139)
pick-up truck-2 city-1-loc-1 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-1-loc-1 city-1-loc-3 (43)
drive truck-2 city-1-loc-3 city-1-loc-2 (43)
pick-up truck-2 city-1-loc-2 package-1 capacity-1 capacity-2 (1)
pick-up truck-2 city-1-loc-2 package-2 capacity-0 capacity-1 (1)
drive truck-2 city-1-loc-2 city-1-loc-3 (43)
drive truck-2 city-1-loc-3 city-1-loc-1 (43)
drive truck-2 city-1-loc-1 city-2-loc-2 (139)
drop truck-2 city-2-loc-2 package-1 capacity-0 capacity-1 (1)
drive truck-2 city-2-loc-2 city-2-loc-1 (35)
drop truck-2 city-2-loc-1 package-3 capacity-1 capacity-2 (1)
drive truck-2 city-2-loc-1 city-2-loc-4 (17)
drive truck-2 city-2-loc-4 city-2-loc-3 (47)
drop truck-2 city-2-loc-3 package-2 capacity-2 capacity-3 (1)
[t=0.0279812s, 11500 KB] Plan length: 16 step(s).
[t=0.0279812s, 11500 KB] Plan cost: 594
[t=0.0279812s, 11500 KB] Expanded 24 state(s).
[t=0.0279812s, 11500 KB] Reopened 0 state(s).
[t=0.0279812s, 11500 KB] Evaluated 25 state(s).
[t=0.0279812s, 11500 KB] Evaluations: 50
[t=0.0279812s, 11500 KB] Generated 153 state(s).
[t=0.0279812s, 11500 KB] Dead ends: 0 state(s).
[t=0.0279812s, 11500 KB] Number of registered states: 25
[t=0.0279812s, 11500 KB] Int hash set load factor: 25/32 = 0.78125
[t=0.0279812s, 11500 KB] Int hash set resizes: 5
[t=0.0279812s, 11500 KB] Search time: 0s
[t=0.0279812s, 11500 KB] Total time: 0.0279812s
Solution found.
Peak memory: 11500 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.33s
